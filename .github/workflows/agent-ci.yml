name: Agent CI (inner loop)

on:
  push:
    branches:
      - 'agent/**'          # Copilot's working branches iterate here
  workflow_dispatch:

# Keep perms tight; enough to publish checks & artifacts
permissions:
  contents: read
  checks: write

# Prevent overlapping runs per branch during fast iterations
concurrency:
  group: agent-ci-${{ github.ref }}
  cancel-in-progress: true

env:
  # Adjust to your installed UE version/location on the runner
  UE_ROOT: 'C:\Program Files\Epic Games\UE_5.6'
  # Optional: set PROJECT_UPROJECT as a repo variable/secret to enable tests
  # Example: 'D:\Projects\YourGame\YourGame.uproject'
  PROJECT_UPROJECT: ''

jobs:
  build_and_test:
    # Stays out of PR context entirely (no maintainer-approval wall)
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: [self-hosted, windows, ue5]   # <- keep your existing runner labels

    steps:
      - name: Checkout (full, with submodules)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Locate plugin (.uplugin)
        id: find
        shell: powershell
        run: |
          $uplugin = Get-ChildItem -Path $PWD -Recurse -Filter *.uplugin | Select-Object -First 1
          if (-not $uplugin) {
            Write-Error "No .uplugin found in repository."
          }
          "plugin_path=$($uplugin.FullName)" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          "plugin_dir=$($uplugin.DirectoryName)" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          "plugin_name=$($uplugin.BaseName)" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          Write-Host "Using plugin: $($uplugin.FullName)"

      - name: Build plugin (Win64)
        shell: powershell
        run: |
          $uat = Join-Path $env:UE_ROOT 'Engine\Build\BatchFiles\RunUAT.bat'
          $pkg = Join-Path $env:RUNNER_TEMP 'PluginPackage'
          New-Item -ItemType Directory -Force -Path $pkg | Out-Null
          & "$uat" BuildPlugin `
            -Plugin:"${{ steps.find.outputs.plugin_path }}" `
            -Package:"$pkg" `
            -TargetPlatforms=Win64 `
            -Rocket
        # If you need additional target platforms, add them comma-separated to -TargetPlatforms

      - name: Package artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.find.outputs.plugin_name }}-Win64
          path: ${{ runner.temp }}/PluginPackage

      # OPTIONAL: run editor automation tests when a project is available
      - name: Run Automation Tests (optional)
        if: env.PROJECT_UPROJECT != ''
        shell: powershell
        timeout-minutes: 60
        run: |
          $editor = Join-Path $env:UE_ROOT 'Engine\Binaries\Win64\UnrealEditor-Cmd.exe'
          $logDir = Join-Path $env:RUNNER_TEMP 'TestLogs'
          New-Item -ItemType Directory -Force -Path $logDir | Out-Null
          # Example: run all functional tests headless; tailor to your suites
          & "$editor" "$env:PROJECT_UPROJECT" -unattended -nop4 -nullrhi -nosplash `
            -ExecCmds="Automation RunTests Now; Quit" `
            -ReportExportPath="$logDir"
          # Collect reports if present
          if (Test-Path $logDir) {
            Write-Host "Tests completed. Collecting reports..."
          }

      - name: Upload test reports (optional)
        if: env.PROJECT_UPROJECT != ''
        uses: actions/upload-artifact@v4
        with:
          name: TestReports
          path: ${{ runner.temp }}/TestLogs
          if-no-files-found: ignore
